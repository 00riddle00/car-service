// Use DBML to define your database structure
// Diagram builder: https://dbdiagram.io/
// Docs: https://dbml.dbdiagram.io/docs

Table auth_group {
  id integer [primary key]
  name varchar
}

Table auth_permission {
  id integer [primary key]
  content_type_id integer
  codename varchar
  name varchar
}

// "auth_group_permissions" association table realizes a many-to-many
// relationship between the tables "auth_group" and "auth_permission".
Table auth_group_permissions {
  id integer [primary key]
  group_id integer
  permission_id integer
}

Table auth_user {
  id integer [primary key]
  password varchar
  last_login datetime
  is_superuser bool
  email varchar
  is_staff bool
  is_active bool
  date_joined varchar
  name varchar
}

// "auth_user_groups" association table realizes a many-to-many
// relationship between the tables "auth_user" and "auth_group".
Table auth_user_groups {
  id integer [primary key]
  user_id integer
  group_id integer
}

// "auth_user_user_permissions" association table realizes a
// many-to-many relationship between the tables "auth_user" and
Table auth_user_user_permissions {
  id integer [primary key]
  user_id integer
  permission_id integer
}

// --------------- Relationships ---------------

// "auth_group_permissions" association table realizes a many-to-many
// relationship between the tables "auth_group" and "auth_permission".
// Many-to-many relationship is realized via two one-to-many
// relationships:
Ref: auth_group.id < auth_group_permissions.group_id // one-to-many
Ref: auth_permission.id < auth_group_permissions.permission_id // one-to-many

// "auth_user_groups" association table realizes a many-to-many
// relationship between the tables "auth_user" and "auth_group".
// Many-to-many relationship is realized via two one-to-many
// relationships:
Ref: auth_user.id < auth_user_groups.user_id // one-to-many
Ref: auth_group.id < auth_user_groups.group_id // one-to-many

// "auth_user_user_permissions" association table realizes a
// many-to-many relationship between the tables "auth_user" and
// "auth_permission".
// Many-to-many relationship is realized via two one-to-many
// relationships:
Ref: auth_user.id < auth_user_user_permissions.user_id // one-to-many
Ref: auth_permission.id < auth_user_user_permissions.permission_id // one-to-many
